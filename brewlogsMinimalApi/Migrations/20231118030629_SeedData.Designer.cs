// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using brewlogsMinimalApi.Data;

#nullable disable

namespace brewlogsMinimalApi.Migrations
{
    [DbContext(typeof(BrewlogsDbContext))]
    [Migration("20231118030629_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("brewlogsMinimalApi.Model.Brewlog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BrewRatio")
                        .HasColumnType("int");

                    b.Property<string>("BrewerUsed")
                        .HasColumnType("longtext");

                    b.Property<string>("CoffeeName")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Dose")
                        .HasColumnType("int");

                    b.Property<string>("Grind")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("LastUpdated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Roast")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Brewlogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrewRatio = 15,
                            BrewerUsed = "AeroPress",
                            CoffeeName = "Coffee 1",
                            CreatedAt = new DateTime(2023, 11, 17, 21, 6, 29, 371, DateTimeKind.Local).AddTicks(680),
                            Dose = 20,
                            Grind = "Medium",
                            LastUpdated = new DateTime(2023, 11, 17, 21, 6, 29, 371, DateTimeKind.Local).AddTicks(710),
                            Roast = "Medium"
                        },
                        new
                        {
                            Id = 2,
                            BrewRatio = 16,
                            BrewerUsed = "Pour-Over",
                            CoffeeName = "Coffee 2",
                            CreatedAt = new DateTime(2023, 11, 17, 21, 6, 29, 371, DateTimeKind.Local).AddTicks(710),
                            Dose = 18,
                            Grind = "Fine",
                            LastUpdated = new DateTime(2023, 11, 17, 21, 6, 29, 371, DateTimeKind.Local).AddTicks(710),
                            Roast = "Dark"
                        },
                        new
                        {
                            Id = 3,
                            BrewRatio = 16,
                            BrewerUsed = "Pour-Over",
                            CoffeeName = "Coffee 3",
                            CreatedAt = new DateTime(2023, 11, 17, 21, 6, 29, 371, DateTimeKind.Local).AddTicks(720),
                            Dose = 18,
                            Grind = "Fine",
                            LastUpdated = new DateTime(2023, 11, 17, 21, 6, 29, 371, DateTimeKind.Local).AddTicks(720),
                            Roast = "Light"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
